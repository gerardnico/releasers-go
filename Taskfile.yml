version: '3'

tasks:
  # Experimental
  nix-build:
    cmds:
      # https://nixos.org/manual/nixpkgs/stable/#buildgomodule-parameters
      # to get the hash with vendorHash = null
      - go mod vendor
      - nix-build -A helloworld
  # Create the binary in the current directory
  jr-assemble:
    cmds:
      - jreleaser assemble
  jr-release:
    cmds:
      - |
        
        if [ "${JRELEASER_PROJECT_VERSION:-}" == "" ]; then
          # if there is no commit added, the last version comes back
          export JRELEASER_PROJECT_VERSION=$(git cliff --bumped-version);
        fi
        
        # Clean
        rm -rf out
        
        # Build the bin and archive
        jreleaser assemble
        
        # Create the release (in github)
        jreleaser release
        
        # Create the docker image
        #    We delete the docker images to not push more than one
        #    https://github.com/jreleaser/jreleaser/discussions/1834
        docker rmi -f $(docker images -q ghcr.io/$GIT_REP0) 
        jreleaser package
        
        # Push to github
        jreleaser publish

  ko-build:
    cmds:
      - |
        GOFLAGS="-ldflags=-X=main.version=$JRELEASER_PROJECT_VERSION" ko build . \
              --image-label org.opencontainers.image.source=https://github.com/$GIT_REP0 \
              --image-label org.opencontainers.image.description=HelloWorld \
              --image-label org.opencontainers.image.title=HelloWorld \
              --image-label org.opencontainers.image.authors=Nico \
              --image-label org.opencontainers.image.url=https://github.com/$GIT_REP0 \
              --image-label org.opencontainers.image.licenses=MIT \
              --image-label org.opencontainers.image.version=$JRELEASER_PROJECT_VERSION \
              --bare \
              --tags v"$JRELEASER_PROJECT_VERSION"
        

  # Create the binary and add it to the bin in GOPATH/bin
  install:
    cmds:
      - CGO_ENABLED=0 GOOS=linux GOARCH="arm64" go install -ldflags="-X 'main.version=$(git cliff --bumped-version)'" src/helloworld.go



        
